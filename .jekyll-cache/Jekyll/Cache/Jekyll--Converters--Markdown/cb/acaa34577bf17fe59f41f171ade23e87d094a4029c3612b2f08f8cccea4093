I"≤<p>En el <a href="https://www.samurantech.com/instalar-docker-linux/">post</a> anterior, aprendimos c√≥mo instalar Docker en un servidor CentOS. En esta ocasi√≥n haremos lo propio en un Windows 10, para poder trabajar con la herramienta en nuestro equipo.</p>

<h2 id="requisitos">Requisitos</h2>

<ul>
  <li>Windows 10 64-bit: Pro, Enterprise o Education.</li>
  <li>4GB de RAM.</li>
  <li>Tener habilitado la virtualizaci√≥n en la BIOS.</li>
</ul>

<p>En la web oficial de Docker te indican que necesitas tener habilitado el cliente de HyperV, pero como fue en mi caso, al tener habilitado esta caracter√≠stica, aplicaciones como VMware Workstation dejan de funcionar. Por suerte, a partir de Windows 10 2004, sali√≥ Windows Subsystem for Linux (WSL) 2, permitiendo correr contenedores Docker de forma nativa, adem√°s de reducir el consumo de CPU y memoria de forma considerable.</p>

<p>Para poder seguir este tutorial, tenemos que tener actualizado Windows 10 a la versi√≥n 2004 o superior.</p>

<h2 id="instalaci√≥n-wsl-2">Instalaci√≥n WSL 2</h2>

<p>Para poder tener instalado WSL 2, debemos instalar antes la versi√≥n 1. Desde una consola de Powershell con permisos de administrador, ejecutamos el siguiente comando:</p>

<pre><code class="language-cmd">dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart
</code></pre>

<p>Adem√°s tenemos que instalar la caracter√≠stica ‚ÄúVirtual Machine Platform‚Äù o su nombre en espa√±ol ‚ÄúPlataforma de m√°quina virtual‚Äù.</p>

<pre><code class="language-cmd">dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart
</code></pre>

<p>Reiniciamos el equipo y seguimos con el siguiente paso.</p>

<p>En caso de tener ya instalado WSL 1, estos pasos pueden que nos den error. Para actualizar a la versi√≥n 2, tenemos que descargar el siguiente paquete de la <a href="https://docs.microsoft.com/es-es/windows/wsl/install-win10#step-4---download-the-linux-kernel-update-package">web de Windows</a>. Una vez descargado, ejecutamos el fichero y seguimos los pasos indicados.</p>

<h2 id="wsl-2-por-defecto">WSL 2 por defecto</h2>

<p>Por defecto nuestro sistema utilizar√° WSL 1, por lo que tenemos que cambiar dicha configuraci√≥n para que utilice la versi√≥n 2. Ejecutamos el siguiente comando en la consola de Powershell.</p>

<pre><code class="language-cmd">wsl --set-default-version 2
</code></pre>

<p>Para comprobar las distribuciones que tenemos instaladas, podemos hacerlo con el siguiente comando.</p>

<pre><code class="language-cmd">wsl -l -v
</code></pre>

<h2 id="instalar-y-configurar-docker">Instalar y configurar Docker</h2>

<p>Ya es hora de instalar Docker despu√©s de haber seguido los pasos anteriores. Descargamos <em>Docker Desktop for Windows</em> desde la web de <a href="https://www.docker.com/products/docker-desktop">Docker</a> o de <a href="https://hub.docker.com/editions/community/docker-ce-desktop-windows">Docker Hub</a> y lo instalamos. En la instalaci√≥n podremos habilitar la compatibilidad con WSL 2 y una vez termine, tendremos que reiniciar el equipo.</p>

<p>Ahora que el equipo haya arrancado e iniciemos Docker Desktop, nos aparecer√° una ventana en la aplicaci√≥n con un tutorial que podemos hacer u omitir.</p>

<p>Para comprobar que todo ha ido bien, abrimos una consola de Powershell y ejecutamos la imagen hello-world como la anterior vez.</p>

<pre><code class="language-cmd">docker run hello-world
</code></pre>

<p>Es una herramienta muy potente que yo utilizo para realizar desarrollos y pruebas sin tener que desplegar una m√°quina virtual, ahorrando mucho tiempo en el proceso, por lo cual la recomiendo.</p>

<p>Espero que os haya gustado y os haya servido de ayuda. ¬°Hasta la pr√≥xima!</p>

:ET