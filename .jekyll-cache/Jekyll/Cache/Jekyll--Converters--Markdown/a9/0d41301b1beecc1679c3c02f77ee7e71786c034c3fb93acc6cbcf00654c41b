I"œ<p>Para hacer esta web, utilic√© Jekyll, un generador de sitios web est√°ticos que permite crear cada p√°gina web a partir de un fichero Markdown. Para que sea mucho m√°s comodo utilizarlo, usaremos Docker para que sea s√≥lo usar un contenedor y no tener que instalar m√°s cosas en nuestros equipos.</p>

<h2 id="crear-sitio-web">Crear sitio web</h2>

<p>Ejecutaremos el siguiente comando para que Docker cree el contenedor y ejecute dentro del mismo el comando que utiliza Jekyll para generar lo que vendr√° a ser nuestro blog.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">export </span><span class="nv">blog_name</span><span class="o">=</span><span class="s2">"blog-test"</span>
docker run <span class="nt">--rm</span> <span class="nt">--volume</span> <span class="s2">"</span><span class="nv">$PWD</span><span class="s2">:/srv/jekyll"</span> <span class="nt">-it</span> jekyll/jekyll jekyll new <span class="nv">$blog_name</span> <span class="o">&amp;&amp;</span> <span class="nb">cd</span> <span class="nv">$blog_name</span>
</code></pre></div></div>
<blockquote>
  <p>El par√°metro <code class="language-plaintext highlighter-rouge">--rm</code> indica que una vez se ejecuta el contenedor, tiene que eliminarlo. Con <code class="language-plaintext highlighter-rouge">-it</code> permite generar una pseudo-terminal, lo que posibilita ejecutar comandos mientras el contenedor se ejecuta.</p>
</blockquote>

<p>Nos habr√° creado la siguiente estructura de directorios.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>blog-test
    ‚îú‚îÄ‚îÄ 404.html
    ‚îú‚îÄ‚îÄ about.markdown
    ‚îú‚îÄ‚îÄ _config.yml
    ‚îú‚îÄ‚îÄ Gemfile
    ‚îú‚îÄ‚îÄ index.markdown
    ‚îî‚îÄ‚îÄ _posts
        ‚îî‚îÄ‚îÄ 2023-01-22-welcome-to-jekyll.markdown
</code></pre></div></div>

<h2 id="construir-sitio-web">Construir sitio web</h2>

<p>Con esto ya habremos creado nuestro blog, ahora queda construirlo para que Jekyll genere los ficheros necesarios para una vez levantemos el servidor, podamos ver la p√°gina como queremos, con sus imagenes y su CSS.</p>

<p>Para ello, tendremos que ejecutar el siguiente comando.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker run <span class="nt">--rm</span> <span class="nt">--volume</span> <span class="s2">"</span><span class="nv">$PWD</span><span class="s2">:/srv/jekyll"</span> <span class="nt">-it</span> jekyll/jekyll jekyll build
</code></pre></div></div>

<p>Esto habr√° generado una carpeta llamada <code class="language-plaintext highlighter-rouge">_site</code> dentro de nuestro directorio, por lo que ya podremos levantar nuestro servidor para comprobar que funciona correctamente.</p>

<h2 id="levantar-servidor-web">Levantar servidor web</h2>

<blockquote>
  <p>Quiz√°s os d√© fallo la primera vez que arranque el servidor, para solucionarlo s√≥lo habr√° que agregar la siguiente l√≠nea en el fichero <code class="language-plaintext highlighter-rouge">Gemfile</code>: <code class="language-plaintext highlighter-rouge">gem "webrick"</code></p>
</blockquote>

<p>As√≠ levantaremos el servidor web para ver la p√°gina.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker run <span class="nt">--rm</span> <span class="nt">--name</span> blog <span class="nt">--volume</span> <span class="s2">"</span><span class="nv">$PWD</span><span class="s2">:/srv/jekyll"</span> <span class="nt">-p</span> 4000:4000 <span class="nt">-it</span> jekyll/jekyll jekyll serve
</code></pre></div></div>

<p>Para mostrarla, tendremos que abrir en el navegador la siguiente direcci√≥n, http://localhost:4000. Mientras el servidor est√© arrancado, cada vez que hagamos un cambio en los ficheros, con actualizar la p√°gina del navegador valdr√° para ver el cambio.</p>

<p>Para acabar con el contenedor, valdr√° con pulsar <code class="language-plaintext highlighter-rouge">ctrl-c</code> para que termine el proceso. Cada vez que queremos levantar el servidor, con volver a ejecutar el anterior comando, lo tendremos listo.</p>

<p>Con esto acaba el post, he utilizado Docker para trabajar con Jekyll porque prob√© en su d√≠a instalarlo directamente en el equipo y el problema de dependencias o al tener que cambiar de un equipo a otro es horrible, por lo que con estos nos ahorraremos muchos quebraderos de cabeza.</p>

<p>Espero que os haya gustado y os haya servido de ayuda. ¬°Hasta la pr√≥xima!</p>
:ET